openapi: 3.0.3
info:
  title: ServiceBookingMobile API
  description: |
    API pour l'application mobile ServiceBookingMobile - Système de réservation de rendez-vous pour prestataires de services (coiffeurs, esthéticiens, etc.)
    
    ## Authentification
    L'API utilise l'authentification JWT via Bearer Token dans l'en-tête Authorization.
    
    ## Statuts des rendez-vous
    - `pending`: En attente de confirmation
    - `confirmed`: Confirmé
    - `in-progress`: En cours
    - `cancelled`: Annulé
    - `completed`: Terminé
  version: 1.0.0
  contact:
    name: API Support
    email: support@servicebooking.com
servers:
  - url: http://172.25.1.22:5000/api
    description: Serveur de développement
  - url: https://api.servicebooking.com
    description: Serveur de production

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          description: Identifiant unique de l'utilisateur
        firstName:
          type: string
          description: Prénom
        lastName:
          type: string
          description: Nom de famille
          nullable: true
        email:
          type: string
          format: email
          description: Adresse email
        role:
          type: string
          description: Rôle de l'utilisateur
          nullable: true
        phone:
          type: string
          description: Numéro de téléphone
          nullable: true
        photoUrl:
          type: string
          description: URL de la photo de profil
          nullable: true
        avatar:
          type: string
          description: Avatar de l'utilisateur
          nullable: true
        pseudo:
          type: string
          description: Pseudonyme
          nullable: true
        createdAt:
          type: string
          format: date-time
          description: Date de création
          nullable: true
      required:
        - id
        - firstName
        - email

    Service:
      type: object
      properties:
        id:
          type: string
          description: Identifiant unique du service
        name:
          type: string
          description: Nom du service
        description:
          type: string
          description: Description du service
        price:
          type: number
          format: float
          description: Prix du service
        duration:
          type: integer
          description: Durée du service en minutes
        category:
          type: string
          description: Catégorie du service
        categoryId:
          type: integer
          description: Identifiant de la catégorie
          nullable: true
        categoryName:
          type: string
          description: Nom de la catégorie
          nullable: true
        image:
          type: string
          description: Nom du fichier image
          nullable: true
        imageUrl:
          type: string
          description: URL complète de l'image
          nullable: true
        featured:
          type: boolean
          description: Service mis en avant
          nullable: true
        createdAt:
          type: string
          format: date-time
          description: Date de création
          nullable: true
      required:
        - id
        - name
        - description
        - price
        - duration
        - category

    Appointment:
      type: object
      properties:
        id:
          type: string
          description: Identifiant unique du rendez-vous
        user:
          $ref: '#/components/schemas/User'
        service:
          $ref: '#/components/schemas/Service'
        date:
          type: string
          format: date-time
          description: Date et heure du rendez-vous
        status:
          type: string
          enum: [pending, confirmed, in-progress, cancelled, completed]
          description: Statut du rendez-vous
        notes:
          type: string
          description: Notes additionnelles
          nullable: true
        createdAt:
          type: string
          format: date-time
          description: Date de création
      required:
        - id
        - user
        - service
        - date
        - status
        - createdAt

    TimeSlot:
      type: object
      properties:
        id:
          type: string
          description: Identifiant unique du créneau
        time:
          type: string
          pattern: '^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$'
          description: Heure au format HH:MM
        available:
          type: boolean
          description: Disponibilité du créneau
        period:
          type: string
          enum: [morning, afternoon]
          description: Période de la journée
          nullable: true
      required:
        - id
        - time
        - available

    Notification:
      type: object
      properties:
        id:
          type: string
          description: Identifiant unique de la notification
        title:
          type: string
          description: Titre de la notification
        message:
          type: string
          description: Message de la notification
        read:
          type: boolean
          description: Statut de lecture
        createdAt:
          type: string
          format: date-time
          description: Date de création
        type:
          type: string
          enum: [appointment, promo, system]
          description: Type de notification
        data:
          type: object
          properties:
            appointmentId:
              type: string
              nullable: true
            serviceId:
              type: string
              nullable: true
          nullable: true
      required:
        - id
        - title
        - message
        - read
        - createdAt
        - type

    Category:
      type: object
      properties:
        id:
          type: string
          description: Identifiant unique de la catégorie
        name:
          type: string
          description: Nom de la catégorie
        icon:
          type: string
          description: Icône de la catégorie
      required:
        - id
        - name
        - icon

    AuthResponse:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        token:
          type: string
          description: Token JWT d'authentification
      required:
        - user
        - token

    ApiResponse:
      type: object
      properties:
        id:
          type: integer
          description: Identifiant de la ressource créée
        message:
          type: string
          description: Message de confirmation
      required:
        - id
        - message

    AvailabilityCheck:
      type: object
      properties:
        available:
          type: boolean
          description: Disponibilité du créneau
        message:
          type: string
          description: Message explicatif
      required:
        - available
        - message

    Error:
      type: object
      properties:
        message:
          type: string
          description: Message d'erreur
        code:
          type: integer
          description: Code d'erreur
      required:
        - message

paths:
  # Authentification
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Connexion utilisateur
      description: Authentifie un utilisateur avec email et mot de passe
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: Adresse email de l'utilisateur
                password:
                  type: string
                  description: Mot de passe
              required:
                - email
                - password
      responses:
        '200':
          description: Connexion réussie
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Identifiants invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Données manquantes ou invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/register:
    post:
      tags:
        - Authentication
      summary: Inscription utilisateur
      description: Crée un nouveau compte utilisateur
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  description: Prénom
                lastName:
                  type: string
                  description: Nom de famille
                  nullable: true
                email:
                  type: string
                  format: email
                  description: Adresse email
                password:
                  type: string
                  description: Mot de passe
                pseudo:
                  type: string
                  description: Pseudonyme
                  nullable: true
                role:
                  type: string
                  description: Rôle de l'utilisateur
                  nullable: true
                userType:
                  type: string
                  enum: [client, professional]
                  description: Type d'utilisateur
                  nullable: true
              required:
                - firstName
                - email
                - password
      responses:
        '201':
          description: Inscription réussie
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '409':
          description: Email déjà utilisé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Données manquantes ou invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # Rendez-vous
  /appointments:
    get:
      tags:
        - Appointments
      summary: Récupérer tous les rendez-vous de l'utilisateur
      description: Récupère la liste des rendez-vous de l'utilisateur authentifié
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Liste des rendez-vous
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Appointment'
        '401':
          description: Non authentifié
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      tags:
        - Appointments
      summary: Créer un nouveau rendez-vous
      description: Crée un nouveau rendez-vous (accès public)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientName:
                  type: string
                  description: Nom du client
                clientEmail:
                  type: string
                  format: email
                  description: Email du client
                clientPhone:
                  type: string
                  description: Téléphone du client
                  nullable: true
                serviceId:
                  type: string
                  description: Identifiant du service
                date:
                  type: string
                  format: date
                  description: Date du rendez-vous (YYYY-MM-DD)
                time:
                  type: string
                  pattern: '^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$'
                  description: Heure du rendez-vous (HH:MM)
                notes:
                  type: string
                  description: Notes additionnelles
                  nullable: true
                createdBy:
                  type: string
                  description: Créé par (pour traçabilité)
                  nullable: true
              required:
                - clientName
                - clientEmail
                - serviceId
                - date
                - time
      responses:
        '201':
          description: Rendez-vous créé avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Données invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Créneau non disponible
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /appointments/client:
    get:
      tags:
        - Appointments
      summary: Récupérer les rendez-vous par email client
      description: Récupère les rendez-vous d'un client via son email
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
            format: email
          description: Email du client
      responses:
        '200':
          description: Liste des rendez-vous du client
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Appointment'
        '400':
          description: Email manquant ou invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /appointments/{id}:
    get:
      tags:
        - Appointments
      summary: Récupérer un rendez-vous spécifique
      description: Récupère les détails d'un rendez-vous par son ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Identifiant du rendez-vous
      responses:
        '200':
          description: Détails du rendez-vous
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        '404':
          description: Rendez-vous non trouvé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      tags:
        - Appointments
      summary: Mettre à jour un rendez-vous
      description: Met à jour les informations d'un rendez-vous
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Identifiant du rendez-vous
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientName:
                  type: string
                  description: Nom du client
                  nullable: true
                clientEmail:
                  type: string
                  format: email
                  description: Email du client
                  nullable: true
                clientPhone:
                  type: string
                  description: Téléphone du client
                  nullable: true
                serviceId:
                  type: string
                  description: Identifiant du service
                  nullable: true
                date:
                  type: string
                  format: date
                  description: Date du rendez-vous
                  nullable: true
                time:
                  type: string
                  pattern: '^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$'
                  description: Heure du rendez-vous
                  nullable: true
                status:
                  type: string
                  enum: [pending, confirmed, in-progress, cancelled, completed]
                  description: Statut du rendez-vous
                  nullable: true
                notes:
                  type: string
                  description: Notes additionnelles
                  nullable: true
      responses:
        '200':
          description: Rendez-vous mis à jour
        '404':
          description: Rendez-vous non trouvé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Non authentifié
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - Appointments
      summary: Supprimer un rendez-vous
      description: Supprime définitivement un rendez-vous
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Identifiant du rendez-vous
      responses:
        '200':
          description: Rendez-vous supprimé
        '404':
          description: Rendez-vous non trouvé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Non authentifié
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /appointments/admin:
    post:
      tags:
        - Appointments
      summary: Créer un rendez-vous (admin)
      description: Crée un nouveau rendez-vous avec privilèges administrateur
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientName:
                  type: string
                  description: Nom du client
                clientEmail:
                  type: string
                  format: email
                  description: Email du client
                clientPhone:
                  type: string
                  description: Téléphone du client
                  nullable: true
                serviceId:
                  type: string
                  description: Identifiant du service
                date:
                  type: string
                  format: date
                  description: Date du rendez-vous (YYYY-MM-DD)
                time:
                  type: string
                  pattern: '^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$'
                  description: Heure du rendez-vous (HH:MM)
                notes:
                  type: string
                  description: Notes additionnelles
                  nullable: true
              required:
                - clientName
                - clientEmail
                - serviceId
                - date
                - time
      responses:
        '201':
          description: Rendez-vous créé avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Non authentifié ou privilèges insuffisants
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Données invalides
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /appointments/{id}/status:
    patch:
      tags:
        - Appointments
      summary: Mettre à jour le statut d'un rendez-vous
      description: Met à jour uniquement le statut d'un rendez-vous
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Identifiant du rendez-vous
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [pending, confirmed, in-progress, cancelled, completed]
                  description: Nouveau statut du rendez-vous
              required:
                - status
      responses:
        '200':
          description: Statut mis à jour
        '404':
          description: Rendez-vous non trouvé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Non authentifié
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /appointments/check/{date}/{time}:
    get:
      tags:
        - Appointments
      summary: Vérifier la disponibilité d'un créneau
      description: Vérifie si un créneau spécifique est disponible
      parameters:
        - name: date
          in: path
          required: true
          schema:
            type: string
            format: date
          description: Date à vérifier (YYYY-MM-DD)
        - name: time
          in: path
          required: true
          schema:
            type: string
            pattern: '^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$'
          description: Heure à vérifier (HH:MM)
      responses:
        '200':
          description: Résultat de la vérification
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityCheck'
        '400':
          description: Format de date/heure invalide
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # Services
  /services:
    get:
      tags:
        - Services
      summary: Récupérer tous les services
      description: Récupère la liste de tous les services disponibles
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Liste des services
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service'

  /services/{id}:
    get:
      tags:
        - Services
      summary: Récupérer un service spécifique
      description: Récupère les détails d'un service par son ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Identifiant du service
      responses:
        '200':
          description: Détails du service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Service'
        '404':
          description: Service non trouvé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /services/{id}/availability:
    get:
      tags:
        - Services
      summary: Récupérer la disponibilité d'un service
      description: Récupère les créneaux disponibles pour un service à une date donnée
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Identifiant du service
        - name: date
          in: query
          required: true
          schema:
            type: string
            format: date
          description: Date pour vérifier les disponibilités (YYYY-MM-DD)
      responses:
        '200':
          description: Créneaux disponibles
          content:
            application/json:
              schema:
                type: object
                properties:
                  slots:
                    type: array
                    items:
                      $ref: '#/components/schemas/TimeSlot'
        '404':
          description: Service non trouvé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /services/{id}/image:
    get:
      tags:
        - Services
      summary: Récupérer l'image d'un service
      description: Récupère l'image binaire associée à un service
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Identifiant du service
      responses:
        '200':
          description: Image du service
          content:
            image/*:
              schema:
                type: string
                format: binary
        '404':
          description: Service ou image non trouvé
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # Notifications
  /notifications:
    get:
      tags:
        - Notifications
      summary: Récupérer toutes les notifications
      description: Récupère la liste des notifications de l'utilisateur
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Liste des notifications
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
        '401':
          description: Non authentifié
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /notifications/{id}/read:
    put:
      tags:
        - Notifications
      summary: Marquer une notification comme lue
      description: Marque une notification spécifique comme lue
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Identifiant de la notification
      responses:
        '200':
          description: Notification marquée comme lue
        '404':
          description: Notification non trouvée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Non authentifié
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /notifications/{id}:
    delete:
      tags:
        - Notifications
      summary: Supprimer une notification
      description: Supprime définitivement une notification
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Identifiant de la notification
      responses:
        '200':
          description: Notification supprimée
        '404':
          description: Notification non trouvée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Non authentifié
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # Catégories
  /categories:
    get:
      tags:
        - Categories
      summary: Récupérer toutes les catégories
      description: Récupère la liste de toutes les catégories de services
      responses:
        '200':
          description: Liste des catégories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'

tags:
  - name: Authentication
    description: Gestion de l'authentification des utilisateurs
  - name: Appointments
    description: Gestion des rendez-vous
  - name: Services
    description: Gestion des services disponibles
  - name: Notifications
    description: Gestion des notifications utilisateur
  - name: Categories
    description: Gestion des catégories de services
